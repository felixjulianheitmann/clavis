name: Flutter Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    
    strategy:
      matrix:
        platform: [web, android, linux]
        os: [ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
      fail-fast: false
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: 3.29.2

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: install linux deps
        if: runner.os == 'linux'
        run: |
          sudo apt update && sudo apt install -y \
          curl \
          git \
          unzip \
          xz-utils \
          zip \
          libglu1-mesa

      - name: install linux native app deps
        if: runner.os == 'linux' && matrix.platform == 'linux'
        run: |
          sudo apt update && sudo apt install -y \
          clang \
          cmake \
          ninja-build \
          pkg-config \
          libgtk-3-dev \
          liblzma-dev \
          libstdc++-12-dev \
          libsecret-1-dev

      - name: Install dependencies
        run: flutter pub get

      - name: Build Flutter ${{ matrix.platform }} app
        if: runner.os == 'linux'
        run: |
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --release
          elif [ "${{ matrix.platform }}" == "web" ]; then
            flutter build web --release
          elif [ "${{ matrix.platform }}" == "linux" ]; then
            flutter build linux --release  
          fi
      
      - name: Build Flutter ${{ matrix.platform }} app
        if: runner.os == 'Windows' && matrix.platform == 'windows'
        run: flutter build windows --release

      - name: list builds
        run: ls build/*

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'android'
        with:
          name: ${{ matrix.platform }}-build-${{ github.sha }}
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'linux'
        with:
          name: ${{ matrix.platform }}-build-${{ github.sha }}
          path: build/linux/x64/release/bundle

      - name: Upload Web artifacts
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'web'
        with:
          name: ${{ matrix.platform }}-build-${{ github.sha }}
          path: build/web

  